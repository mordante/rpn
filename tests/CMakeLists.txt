add_executable(tests
	calculator/controller.cpp
	calculator/controller/constants.cpp
	calculator/controller/function_floor.cpp
	calculator/controller/function_round.cpp
	calculator/controller/key_char_ampersand.cpp
	calculator/controller/key_char_circumflex.cpp
	calculator/controller/key_char_default.cpp
	calculator/controller/key_char_forward_slash.cpp
	calculator/controller/key_char_greater_than.cpp
	calculator/controller/key_char_less_than.cpp
	calculator/controller/key_char_minus.cpp
	calculator/controller/key_char_pipe.cpp
	calculator/controller/key_char_plus.cpp
	calculator/controller/key_char_star.cpp
	calculator/controller/key_char_tilde.cpp
	calculator/controller/key_backspace.cpp
	calculator/controller/key_enter.cpp
	calculator/controller/change_base.cpp
	calculator/controller/key_control_n.cpp
	calculator/controller/key_control_z.cpp
	calculator/model.cpp
	calculator/model/change_base.cpp
	calculator/model/input.cpp
	calculator/stack.cpp
	calculator/transaction.cpp
	calculator/undo_handler.cpp
	calculator/value.cpp
	calculator/value/math/arithmetic/add.cpp
	calculator/value/math/arithmetic/division.cpp
	calculator/value/math/arithmetic/multiply.cpp
	calculator/value/math/arithmetic/negate.cpp
	calculator/value/math/arithmetic/subtract.cpp
	calculator/value/math/bitwise/and.cpp
	calculator/value/math/bitwise/complement.cpp
	calculator/value/math/bitwise/or.cpp
	calculator/value/math/bitwise/shl.cpp
	calculator/value/math/bitwise/shr.cpp
	calculator/value/math/bitwise/xor.cpp
	calculator/value/math/core.cpp
	calculator/value/math/round/floor.cpp
	calculator/value/math/round/round.cpp
	format_error.cpp
	handle_input.cpp
	parser/parser.cpp
	parser/unsigned_value.cpp
	parser/floating_point_value.cpp
	parser/signed_value.cpp
)
target_compile_options(tests
	PRIVATE
		${module_compile_options}
		${diagnostic_compile_options}
)
set_target_properties(tests
	PROPERTIES
		CXX_CLANG_TIDY "${CLANG_TIDY}"
)
target_link_libraries(tests
	PRIVATE
		calculator
		parser
		gtest_main
		c++
)
add_module(tests.format_error format_error.cpp)
add_module(tests.handle_input handle_input.cpp)
add_dependencies(tests
	tests.format_error.pcm
	tests.handle_input.pcm
)
target_code_coverage(tests)
